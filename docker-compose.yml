version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME}_web
    ports:
      - "${WEB_PORT}:5000"
    env_file:
      - ${ENV_FILE}
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - ACCESS_TOKEN_KEY=${ACCESS_TOKEN_KEY}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_net

  db:
    image: postgres:14.17  
    container_name: ${APP_NAME}_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app_net

volumes:
  postgres_data:

networks:
  app_net:
    driver: bridge
